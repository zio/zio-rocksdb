name: CI

on:
  pull_request:
  push:
    branches: ['master', 'zio2']
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v11
        with:
          java-version: 'zulu@1.17'
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Lint code
        run: sbt check

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: ['adopt@1.11', 'zulu@1.17']
        scala: ['2.12.20', '2.13.15', '3.3.4']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v11
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Run tests
        run: sbt ++${{ matrix.scala }}! test

  publish:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java 
        uses: olafurpg/setup-scala@v11
        with:
          java-version: 'zulu@1.17'
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Release artifacts
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
